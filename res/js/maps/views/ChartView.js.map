{"version":3,"sources":["views/ChartView.coffee"],"names":[],"mappings":"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","file":"../../views/ChartView.js","sourcesContent":["# ChartView starts here\nChartView = Backbone.View.extend {\n\tel: \"#chartArea\" # Div used for this view\n\n\tevents: { #none for now\n\n\t} \n\n\t# FUNCTION: initialize\n\tinitialize: (options) ->\n\t\t_.bindAll this, 'render', 'renderReport', 'getTemplates', 'fetchTemplateDetails', 'renderTemplates','callChartTab', 'updateSelections', 'createNewChart' # binding all the functions using this/@\n\t\t\n\t\t@username = options.username\n\t\t@user_id = options.user_id\n\t\t@key = options.key\n\t\t@showDataAutomatically = options.showDataAutomatically\n\t\t#console.log \"ChartView Init -> 1\"\n\t\t@$el.empty()\n\t\t@counter = 1 #initializing counter to give ids\n\t\t@$el.hide() #hiding so that the charts dont rendr on homepage\n\n\t\t@templates = [] # To stores template data\n\n\t\t@chartSelectionModel = new poimapper.models.ChartSelectionModel()\n\t\t@chartReportCollection = new poimapper.ChartCollection()\n\t\t@chartReportCollection.bind 'add', @callChartTab\n\t\t\n\t\t@$el.append @modal_template() # Appending div which will be used to maximize charts\n\t\t$(\"#chartpoitypes\").append '\n\t\t<li class=\"dropdown-header templateheader\">Saved Reports</li>'\n#\t\t<li>\n#\t\t\t<a href=\"#\" id=\"createChart_id\" data-target=\"#maxModal\">Create New\n#\t\t\t<span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n#\t\t\t</a>\n#\t\t</li>' # Lapelling headers for dropdown\n\n# FUNCTION: render\n\trender: ->\n\t\t#console.log \"chartview\trender called\"\n\t\t@getTemplates() # Fetches JSON templates for the user\n\t\t$(\"#chartTab\").show();\n\t\t\n\t\t#Help video\n\t\t#console.log(\"ChartView clientpersistmodel\",window.clientPersistModel)\n\t\treadyStateCheckInterval = setInterval(()-> \n\t\t\tif document.readyState is \"complete\"\n\t\t\t\t\tclearInterval(readyStateCheckInterval)\n\t\t\t\t\t#startD = new Date(\"2016-04-14 16:09:01.0\")\n\t\t\t\t\t#lastLogin = new Date(window.clientPersistModel.get(\"lastLogin\"))\n\t\t\t\t\t#showVid = (if lastLogin<startD then true else false)\n\t\t\t\t\tshowVid = (if window.clientPersistModel.get(\"chartVid\") is \"true\" then true else false)\n\t\t\t\t\t\n\t\t\t\t\tif showVid\n\t\t\t\t\t\tbootbox.dialog {\n\t\t\t\t\t\t\ttitle:\"New Feature: Tutorial to use Charts\",\n\t\t\t\t\t\t\tmessage: '<center><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/mMdOIuLorE8?rel=0\" frameborder=\"0\" allowfullscreen></iframe></center>',\n\t\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\t\tdanger:{\n\t\t\t\t\t\t\t\t\tlabel: \"Close\",\n\t\t\t\t\t\t\t\t\tclassName: \"btn-primary\",\n\t\t\t\t\t\t\t\t\tcallback: ->\n\t\t\t\t\t\t\t\t\t\t#Example.show(\"great success\");\n\t\t\t\t\t\t\t\t\t\t#console.log(\"dont show again\");\n\t\t\t\t\t\t\t\t\t\twindow.clientPersistModel.set chartVid : \"false\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.clientPersistModel.set chartVid : \"false\"\n\t\t, 10);\n\t\n\t\t\n\t\t\n\n\n\t# FUNCTION:createNewChart has the form options to create a new chart\n\tcreateNewChart: () ->\n\t\t# TODO uncomment the form part to fix loading time\n\t\t$( \"#chartButton\" ).trigger( \"click\" )\n\t\tform = root.formCollection\n\t\tself = @\n\t\t#console.log 'form', form.slice(0,3)\n\t\tif form.length == 0\n\t\t# TODO remove everythn in if loop, just keep bootbox.alert\n\t\t\tbootbox.alert \"Please wait for the forms to load\"\n\t\telse\n\t\t\t#console.log \"forms\", form\n\t\t\ttherealname = {}\n\t\t\toptions = []\n\t\t\tform.each (model) ->\n\t\t\t\tunless model.get(\"type\") is \"TABLE\"\n\t\t\t\t\t_.each model.get(\"questionPage\"), (page) ->\n\t\t\t\t\t\t_.each page.question, (question) ->\n\t\t\t\t\t\t\tif question.type is \"TableQuestion\" and question.inVisible is false\n\t\t\t\t\t\t\t\t# store the fucking name\n\t\t\t\t\t\t\t\ttm = window.formCollection.findWhere({\"ref\": question.table.columns.relation[0].ref})\n\t\t\t\t\t\t\t\ttherealname[tm.id] = question.text\n\n\t\t\tform.each (model) ->\n\n\t\t\t\tif not model.get(\"isChild\") and model.get(\"type\") is \"POI\"\n\t\t\t\t\toptions.push {\"name\":model.get(\"name\"), \"value\":model.get(\"id\")}\n\t\t\t\telse if model.get(\"isChild\") and model.get(\"type\") is \"POI\"\n\t\t\t\t\toptions.push {\"name\": \"Subform: #{model.get(\"name\")}\", \"value\": model.get(\"id\")}\n\t\t\t\telse if model.get(\"isChild\") and model.get(\"type\") is \"TABLE\"\n\t\t\t\t\tunless therealname[model.id] is `undefined`\n\t\t\t\t\t\t\toptions.push {\"name\": \"Table: #{model.get(\"name\")}\", \"value\": model.get(\"id\")}\n\n\t\t\tbootbox.dialog {\n\t\t\t\t\t\t\t\t\ttitle: \"Create a New Report\",\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t'<div class=\"row\">  ' +\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t'<form class=\"form-horizontal\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"form-group\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<label class=\"col-md-4 control-label\" for=\"report_title\">Report Name</label> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-4\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<input type=\"text\" id=\"report_title\" name=\"report_title\" type=\"text\" value=\"'+\"New Report-\"+@counter+'\" placeholder=\"Enter Report Name\" class=\"form-control input-md\"/>' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"form-group\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<label class=\"col-md-4 control-label\" for=\"form_id\">Select Form</label> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-4\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<select id=\"form_id\" name=\"form_id\" type=\"text\" placeholder=\"Select Form\" class=\"form-control input-md\"></select>' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"form-group\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<label class=\"col-md-4 control-label\" for=\"chart_type\">Type of Chart</label> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-4\"> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<select id=\"chart_type\" name=\"chart_type\" type=\"text\" placeholder=\"Select chart type\" class=\"form-control input-md\">'+\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<option value=\"0\">Bar Chart</option>'+\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<option value=\"3\">Pie Chart</option>'+\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</select>' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> ' +\n\t\t\t\t\t\t\t\t\t\t\t\t'</form> </div>  </div>'\n\t\t\t\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Define Report\",\n\t\t\t\t\t\t\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\t\t\t\t\t\t\tcallback: ->\n\t\t\t\t\t\t\t\t\t\t\t\t#console.log \"form submitted\"\n\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel = new poimapper.models.ChartReportModel\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set form_id: $(\"#form_id\").val()\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set template: false\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set newChart: true\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set report_title: $(\"#report_title\").val()\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set template_data: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"url\":\"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"template_params\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"poi\": $(\"#form_id\").val(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"includelocation\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"newdata\": \"1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"chart\": $(\"#chart_type\").val(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"SUM\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"questions\": \"Quality_of_water,Ownership,Water_availability,Type_of_water_source\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"locs\": [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"levels\": [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"users\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"fromdate\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"todate\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"timeinfo\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"userinfo\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"legendid\": \"2\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"reportType\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"locationLevels\": \"1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"combinenumericfields\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"timeseriestype\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"locationLevelDataFilter\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"orientation\": \"1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"rowquestionid\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"groupid\": window.groupID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"format\": \"json\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"excludenull\": \"0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"subgroup\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"details\":{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"form\":  $.grep(options, (e) ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.value == $('#form_id').val())[0].name\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tchartReportModel.set report_id: (chartReportModel.get(\"report_title\")+self.counter).replace(/[^A-Z0-9]+/ig, \"_\")\n\n\t\t\t\t\t\t\t\t\t\t\t\tself.chartReportCollection.add chartReportModel\n\t\t\t\t\t\t\t\t\t\t\t\tself.counter++\n\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcancel: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"cancel\",\n\t\t\t\t\t\t\t\t\t\t\tclassName: \"btn\",\n\t\t\t\t\t\t\t\t\t\t\tcallback: ->\n\t\t\t\t\t\t\t\t\t\t\t\t#console.log \"form cancelled\"\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t}\n\t\t\t$.each options,(index, opt) ->\n\t\t\t\t$(\"#form_id\").append new Option(opt.name,opt.value), null\n\n\n\n\t# FUNCTION:callChartTab is called whenever a new model is added to chartReportCollection. callChartTab creates the <li> for dropdown and loads other data for the model\n\tcallChartTab: (chartReportModel)->\n\t\t#console.log \"callChartTab 2 \", chartReportModel\n\t\tchartTab = new poimapper.views.ChartTab(\n\t\t\t model: chartReportModel\n\t\t\t parent: this\n\t\t\t chartSelectionModel: @chartSelectionModel\n\t\t)\n\t\t@counter++\n\t\tif chartReportModel.get(\"template\")\n\t\t\t$(\"#chartpoitypes\").append chartTab.appendList().$el\n\t\telse\n\t\t\t#@$el.append chartTab.createPanel().$el\n\t\t\tchartTab.render()\n\t\t\t$(\"#chartpoitypes .templateheader\").before chartTab.appendList().$el\n\t\tthis\n\n\n\t# FUNCTION:renderReport creates models for reports and adds them to the chartReportCollection\n\trenderReport: (report_data) ->\n\t\tself = this\n\t\tchartReportModel = new poimapper.models.ChartReportModel\n\t\tchartReportModel.set report_title: \"Reporttest\"+@counter\n\t\tchartReportModel.set template: false\n\t\t# To get form name\n\t\t#form = if root.formCollection.get(report_data.template_params.poi)\n\t\t#form = if form == undefined then '' else form.get(\"ref\")\n\t\t#console.log(\"reportdata\", JSON.stringify(report_data))\n\t\tform = (if root.formCollection.get(report_data.template_params.poi)? then root.formCollection.get(report_data.template_params.poi) else '')\n\t\treport_data.details = {}\n\t\treport_data.details.form = form\n\n\t\tchartReportModel.set report_id: chartReportModel.get(\"report_title\").replace(/[^A-Z0-9]+/ig, \"_\")\n\t\t# This is the actual data used for rendering charts\n\t\tif report_data.data == undefined\n\t\t\tsetTimeout(->\n\t\t\t\tcallback = (data, status) ->\n\t\t\t\t\t#report_data.data = data\n\t\t\t\t\t# template_data contains url to fetch chart data, template_params to save template later and actual data already loaded\n\t\t\t\t\tchartReportModel.set template_data: report_data\n\t\t\t\t\tchartReportModel.set data:data\n\t\t\t\t\tself.chartReportCollection.add chartReportModel\n\t\t\t\t\t#console.log \"stringify\",JSON.stringify(report_data)\n\t\t\t\t$.get report_data.url, callback\n\t\t\t)\n\t\telse\n\t\t\t# template_data contains url to fetch chart data, template_params to save template later and actual data already loaded\n\t\t\tchartReportModel.set data: report_data.data\n\t\t\tdelete report_data.data\n\t\t\tchartReportModel.set template_data: report_data\n\n\t\t\t@chartReportCollection.add chartReportModel\n\n\t\t#console.log \"renderReport->\", chartReportModel\n\t\t#console.log \"stringify\",JSON.stringify(chartReportModel)\n\t\t@counter++\n\n\n\t# FUNCTION:renderTemplates Same as renderReport but used for rendering saved templates\n\trenderTemplates: (element) ->\n\t\tself = this\n\t\t$.ajax\n\t\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\t\tasync: false,\n\t\t\t\t\t\turl: \"/json/app/applytemplate/\" + element.report_id\n\t\t\t\t\t\theaders:\n\t\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t\t\t\tuserid: self.username\n\t\t\t\t\t\t\t\tkey: self.key\n\t\t\t\t\t\tsuccess: (result) ->\n\t\t\t\t\t\t\t#console.log \"renderTemplates\", element\n\t\t\t\t\t\t\telement['url']=result.message\n\t\t\t\t\t\t\tchartReportModel = new poimapper.models.ChartReportModel\n\t\t\t\t\t\t\tchartReportModel.set report_title: element.report_name\n\t\t\t\t\t\t\tchartReportModel.set template: true\n\t\t\t\t\t\t\tchartReportModel.set template_data: element\n\t\t\t\t\t\t\tchartReportModel.set report_id: (chartReportModel.get(\"report_title\")+@counter).replace(/[^A-Z0-9]+/ig, \"_\")\n\t\t\t\t\t\t\tself.chartReportCollection.add chartReportModel\n\t\t\t\t\t\t\t@counter++\n\t\tthis\n\n\n\t# renderTemplates: getTemplates() Fetches the name and IDS of all the templates which is later filtered by another function to use only json templates\n\tgetTemplates: ()->\n\t\tself = this\n\t\t$.ajax\n\t\t\t\t\t\ttype: \"GET\"\n\t\t\t\t\t\turl: \"/json/app/reports/#{@user_id}\"\n\t\t\t\t\t\theaders:\n\t\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t\t\t\tuserid: @username\n\t\t\t\t\t\t\t\tkey: @key\n\t\t\t\t\t\tsuccess: (results) ->\n\t\t\t\t\t\t\t\ti = 0\n\t\t\t\t\t\t\t\twhile i < results.length\n\t\t\t\t\t\t\t\t\t# To filter only JSON templates\n\t\t\t\t\t\t\t\t\tself.fetchTemplateDetails(results[i])\n\t\t\t\t\t\t\t\t\ti++\n\n\n\t# FUNCTION:fetchTemplateDetails\tJSON Templates\n\tfetchTemplateDetails: (element) ->\n\t\tself = this\n\t\t$.ajax\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\turl: baseUrl + \"app/templatedetails/\" + element.report_id\n\t\t\t\t\theaders:\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t\t\tuserid: userName\n\t\t\t\t\t\t\tkey: pwrd\n\t\t\t\t\tsuccess: (result) ->\n\t\t\t\t\t\tif result[0].format == 'json'\n\t\t\t\t\t\t\telement['details'] = result[0]\n\t\t\t\t\t\t\tself.templates.push(element)\n\t\t\t\t\t\t\tself.renderTemplates(element)\n\n\n\t# FUNCTION: updateSelections updates the filters selected on the left panel\n\tupdateSelections: (formIds, locations, users,fromDate, toDate, levels) ->\n\t\tform = root.formCollection\n\t\t#console.log \"form\",form\n\t\ttemp_model = new poimapper.models.ChartSelectionModel()\n\t\tunless _.isNaN(fromDate)\n\t\t\tdate = new Date fromDate\n\t\t\tfromDate = date.getFullYear()+'-'+('0'+(date.getMonth()+1)).slice(-2)+'-'+('0'+date.getDate()).slice(-2)\n\t\t\ttemp_model.set fromDate: fromDate\n\n\t\tunless _.isNaN(toDate)\n\t\t\tdate = new Date toDate\n\t\t\ttoDate = date.getFullYear()+'-'+('0'+(date.getMonth()+1)).slice(-2)+'-'+('0'+date.getDate()).slice(-2)\n\t\t\ttemp_model.set toDate: toDate\n\n\t\ttemp_model.set formIds: formIds\n\t\ttemp_model.set locations: locations\n\t\ttemp_model.set users: users\n\t\ttemp_model.set levels: levels\n\t\t@chartSelectionModel.set(temp_model.toJSON())\n\t\t#console.log \"updateCurrentSelectionCV\", formIds, locations, users, fromDate, toDate, @chartSelectionModel.toJSON()\n\n\n\t# The following templates are used to create chartBoxes and maximizing charts\n\tpanel_template:_.template \"<div class='col-md-4 col-lg-4 col-sm-6'><div class=\\\"panel panel-primary chartBox\\\">\n\t\t\t\t\t\t\t<div class=\\\"panel-heading chartTitle\\\">\n\t\t\t\t\t\t\t\t\t{{ graph_title }}\n\t\t\t\t\t\t\t\t\t<button type='button' class='btn btn-xs btn-default col-md-2' aria-label='Maximize' style='float:right;' data-target='#myModal' data-toggle='modal' data-id='{{data_id}}'>\n\t\t\t\t\t\t\t\t\t\t<span class='glyphicon glyphicon-zoom-in' aria-hidden='true'></span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\\\"panel-body {{chart_type}}\\\" id=\\\"viz_{{ counter }}\\\"></div>\n\t\t\t\t\t\t</div></div>\"\n\tmodal_template:_.template '<div class=\"modal fade\" id=\"maxModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"maxModalLabel\">\n\t\t\t\t\t\t\t<div class=\"modal-dialog modal-lg\" id=\"chart-modal-content\" role=\"document\">\n\t\t\t\t\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">close<i class=\"fa fa-times\"></i></button>\n\t\t\t\t\t\t\t\t\t\t<h4 class=\"modal-title\" id=\"maxModalLabel\">Chart title</h4>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"modal-body\" id=\"max_chart\">\n\t\t\t\t\t\t\t\t\t\tChart goes here\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>'\n}\n# export the following globals\nroot = window or this\nunless root.poimapper?\n\troot.poimapper = {}\n\nunless root.poimapper.views?\n\troot.poimapper.views = {}\n\nroot.poimapper.views.ChartView = ChartView\n"]}